name: Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov

      - name: Run linting
        working-directory: ./backend
        run: |
          pip install ruff black
          ruff check .
          black --check .

      - name: Run tests
        working-directory: ./backend
        env:
          DATABASE_URL: "sqlite+aiosqlite:///:memory:"
          JWT_SECRET: "test-secret"
          GOOGLE_CLIENT_ID: "test-client-id"
          GOOGLE_CLIENT_SECRET: "test-client-secret"
        run: |
          pytest -v --cov=app --cov-report=term-missing || echo "No tests found yet"

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run linting
        working-directory: ./frontend
        run: npm run lint || echo "Linting not configured yet"

      - name: Run type check
        working-directory: ./frontend
        run: npm run type-check || npx tsc --noEmit

      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --passWithNoTests || echo "No tests found yet"

      - name: Build application
        working-directory: ./frontend
        env:
          NEXT_PUBLIC_API_URL: "http://localhost:8000/api/v1"
        run: npm run build